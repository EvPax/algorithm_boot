module booth_algorithm
#(	parameter WIDTH = 4 )
(
	input clock,
	input [WIDTH - 1 : 0] mpd, //MultiPlicanD
	input [WIDTH - 1 : 0] mpr, //MultiPlieR
	output [ (2 * WIDTH) - 1 : 0] res
);
	
	reg [WIDTH + 1 : 0] A;
	reg [WIDTH + 1 : 0] S;
	reg [WIDTH + 1 : 0] P;
	
	always @ (posedge clock)
		begin
			A <= {mpd[WIDTH - 1], mpd, (WIDTH + 1){1'b0}};
			S <= {mpd[WIDTH - 1], mpd, WIDTH{1'b0}};
			P <= {(WIDTH + 1){1'b0}, mpr, 1'b0};
			
		end
		
endmodule
